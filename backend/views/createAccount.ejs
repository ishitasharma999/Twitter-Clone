<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f8fa;
            margin: 0;
            padding: 0;
        }

        .twitter-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .twitter-logo {
            width: 40px;
            vertical-align: middle;
        }

        .twitter-title {
            color: #1da1f2;
            display: inline-block;
            margin-left: 10px;
            vertical-align: middle;
        }

        form {
            max-width: 400px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        input[type="text"],
        input[type="password"],
        input[type="file"],
        textarea {
            width: calc(100% - 24px);
            padding: 10px;
            margin: 8px 0;
            display: block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button[type="button"],
        input[type="submit"] {
            width: calc(100% - 24px);
            padding: 10px;
            margin: 8px 0;
            display: inline-block;
            border: none;
            border-radius: 4px;
            background-color: #1da1f2;
            color: #fff;
            cursor: pointer;
            box-sizing: border-box;
        }

        button[type="button"]:hover,
        input[type="submit"]:hover {
            background-color: #0d8bf0;
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        input[type="radio"] {
            display: inline-block;
            margin-right: 5px;
        }

        a {
            display: block;
            margin-top: 20px;
            text-align: center;
            color: #1da1f2;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="twitter-header">
        <img class="twitter-logo" src="../images/twitter.png" alt="Twitter Logo">
        <h1 class="twitter-title">Twitter</h1>
    </div>
    <form action="/create" method="post" enctype="multipart/form-data">
        <label for="username">Username:</label>
        <input required type="text" name="username" placeholder="Username" id="username"> <br/>
        <button type="button" onclick="check()">Check Availability</button><br/>
        <label for="password">Password:</label>
        <input required type="password" name="password" placeholder="Password" id="password"> <br/>
        <label for="male">Gender:</label>
        <label for="male">Male &nbsp&nbsp&nbsp
        <input checked required type="radio" name="gender"  value='M' id="male"></label>
        <label for="female">Female
        <input required type="radio" name="gender" value="F" id="female">
        </label>
        <br/> 
        <label for="mobile">Mobile:</label>
        <input type="text" name="mobile" placeholder="Mobile" id="mobile"> <br/>
        <label for="email">Email:</label>
        <input type="text" name="email" placeholder="Email" id="email"> <br/>
        <label for="pictureinput">Picture:</label>
        <input type="file" id="pictureinput" name="picture" accept="image/*"> <br/>

        <label for="profiletext">Twitter bio: </label>
        <textarea id="profiletext" name="profiletext" rows="5" cols="50" style="vertical-align: top;"></textarea>

        <br/>

        <input type="submit" value="Create account">
    </form>
    <a href="/">Have Account?</a>
    <script>
        const check = async () => {
            event.preventDefault();         //, ensuring that the form is not submitted and the page is not reloaded when the function is called.
            const name = document.getElementById("username").value; //sends an asynchronous HTTP GET request to the server-side route /check/ followed by the username entered by the user. 
            const response = await fetch("/check/" + name);
            if (!response.ok) alert("Error checking username Availablity");
            const user = await response.json();
            if (user.available) alert("Username is available");
            else alert("Username not available");
        };
    </script>
</body>
</html>